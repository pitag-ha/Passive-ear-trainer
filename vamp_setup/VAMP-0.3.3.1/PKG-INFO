Metadata-Version: 1.0
Name: VAMP
Version: 0.3.3.1
Summary: Virus AsseMbly Pipeline.
Home-page: https://bitbucket.org/lance_parsons/vamp/
Author: Lance Parsons
Author-email: lparsons@princeton.edu
License: LICENSE.txt
Description: Virus AsseMbly Pipeline - VAMP
        ==============================
        
        Lance Parsons <lparsons@princeton.edu>
        
        More detailed documentation is available at: https://vamp.readthedocs.org/
        
        Installation
        ------------
        
        VAMP
        ~~~~
        
        1. Download VAMP from https://bitbucket.org/lance_parsons/vamp/downloads
        2. Unarchive into directory
            a. ``tar xzvf vamp-x.x.tar.gz``.
        3. Install VAMP plus python dependencies: 
            a. ``cd vamp-x.x``
            b. ``python setup.py install``
        4. Build documentation (optional)
            a. ``cd docs``
            b. ``make html``
        
        
        
        Third Party Tools
        ~~~~~~~~~~~~~~~~~
        
        These tools are used by the pipeline and must be installed prior to use. Instructions are available on the respective websites:
        
        * `FastX Toolkit <http://hannonlab.cshl.edu/fastx_toolkit/>`_
        * `Bedtools <http://code.google.com/p/bedtools/>`_
        * `FastQC <http://www.bioinformatics.babraham.ac.uk/projects/fastqc/>`_
        * `Bowtie <http://bowtie-bio.sourceforge.net/index.shtml>`_
        * `SSAKE <http://www.bcgsc.ca/platform/bioinfo/software/ssake>`_
        * (Optional) `Mugsy <http://mugsy.sourceforge.net/>`_
            * Other alignment tools may be used to generate the required MAF or aligned fasta files.  One option that works well for nearly complete genomes is `LAGAN <http://lagan.stanford.edu/>`_.
        
        
        See `VAMP Installation Documentation <https://vamp.readthedocs.org/en/latest/install.html>_` for some tips on installing to system where you are not the administrator.
        
        
        
        Configuration
        -------------
        
        1. Copy makefiles/config.mk.template to makefiles/config.mk
        2. Edit config.mk, pointing to the appropriate locations for the installed prerequisites
        
        
        
        Usage
        -----
        
        Preprocessing
        ~~~~~~~~~~~~~
        
        1. Run ``setup_preprocessing.py`` to generate analysis makefile
        2. Edit analysis makefile to change options, etc.
        3. Run ``make -f PREFIX_preprocess.mk``
        4. To cleanup intermediate files: ``make -f PREFIX_preprocess.mk clean``
        
        
        Assembly
        ~~~~~~~~
        
        1. ``multi_ssake.py``
        2. Run ``clean_multi_ssake.sh`` to cleanup intermediate fasta files (interactive, do NOT use qsub)
        3. Assemble ``ssake_combined.contigs`` (using Gap4 or other long read assembler)
        4. Align contigs to related reference using `Mugsy <http://mugsy.sourceforge.net/>`_.
        5. ``maf_net.py`` to build scaffolds using a related reference genome as a guide
        
        
        Annotation Migration and Summary
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        1. Generate an aligned fasta file from reference and new genome(s) 
            * LAGAN can be used if assembly is reasonably complete and strains are similar
            * For more complex alignments or incomplete assemblies, `Mugsy <http://mugsy.sourceforge.net/>`_ has been shown to be effective. Once MAF is generated with MUGSY, use ``maf_net.py`` to generate aligned fasta
        2. Run ``compare_genomes.py aligned.fasta reference.gff``
        3. Run SNPEff on VCF output (optional)
        
        
        
        Copyright and License
        ---------------------
        
        The Virus AsseMbly Pipeline (VAMP) is licensed under the BSD 2-clause license: http://www.opensource.org/licenses/bsd-license.php
        
        Copyright (c) 2012, Lance Parsons, Lewis-Sigler Institute for Integrative Genomics, Princeton University
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        
            Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
            
            Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Platform: UNKNOWN
